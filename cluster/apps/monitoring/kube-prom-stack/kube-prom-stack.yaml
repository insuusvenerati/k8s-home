---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  interval: 6h
  values:
    defaultRules:
      create: true
      rules:
        alertmanager: false
        etcd: true
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeSchedulerAlerting: true
        kubeSchedulerRecording: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
    alertmanager:
      enabled: false
    grafana:
      enabled: true
      image:
        repository: grafana/grafana
        tag: 9.3.1
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          ingress.kubernetes.io/ssl-redirect: "false"
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
        hosts:
          - &host grafana.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host
            secretName: grafana-tls
        # extraPaths:
        #   - path: /*
        #     pathType: Prefix
        #     backend:
        #       service:
        #         name: kube-prometheus-stack-grafana
        #         port:
        #           number: 80
      resources:
        requests:
          cpu: 200m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 256Mi
      persistence:
        enabled: true
        size: 10Gi
      # admin:
      #   existingSecret: grafana-admin
      #   userKey: admin-user
      #   passwordKey: admin-password
    prometheusOperator:
      resources:
        requests:
          cpu: 200m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 256Mi
    prometheus:
      resources:
        requests:
          cpu: 200m
          memory: 128Mi
        limits:
          cpu: 1000m
          memory: 512Mi
