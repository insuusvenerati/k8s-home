---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  interval: 6h
  values:
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeSchedulerAlerting: true
        kubeSchedulerRecording: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
    alertmanager:
      enabled: true
    grafana:
      enabled: true
      image:
        repository: grafana/grafana
        tag: 9.4.3
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          ingress.kubernetes.io/ssl-redirect: "false"
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
        hosts:
          - &host grafana.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host
            secretName: grafana-tls
      resources:
        requests:
          cpu: 200m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 256Mi
      persistence:
        enabled: true
        size: 10Gi
      serviceMonitor:
        enabled: false
    prometheusOperator:
      resources:
        requests:
          cpu: 200m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 256Mi
    prometheus:
      prometheusSpec:
        retention: 7d
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        scrapeInterval: 10m
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          # limits:
          #   cpu: 1500m
          #   memory: 2048Mi
    kubeApiServer:
      enabled: true
    kubelet:
      enabled: true
    kubeEtcd:
      endpoints:
        - 192.168.1.177
        # - 192.168.1.241
        # - 192.168.1.240
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.1.177
        # - 192.168.1.241
        # - 192.168.1.240
      serviceMonitor:
        insecureSkipVerify: true
      service:
        enabled: true
        port: 10259
        targetPort: 10259
    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.1.177
        # - 192.168.1.241
        # - 192.168.1.240
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.1.177
        # - 192.168.1.241
        # - 192.168.1.240
      serviceMonitor:
        insecureSkipVerify: true
      service:
        enabled: true
        port: 10257
        targetPort: 10257
